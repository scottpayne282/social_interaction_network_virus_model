
% In this script we make a sequence of contact graphs based on those
% generated by the simulation model created by the script:
%               simulate_virus_outbreak_basic.m
% Specifically, in THIS script (create_randomized_contacts_matching_dregree.m)
% the new contact networks we generate have the property that for each
% individual graph from simulate_virus_outbreak_basic.m, we here generate a
% corresponding graph such that the new graph HAS THE SAME DEGREE SEQUENCE.
% Thus, we create a new day by day contact model matching the first in
% numbers but not structure....so each person contacts the same number of
% people per day, but there is no group or social structure, the contacts
% are all random.

%% load the simulation data to base the graphs on
% the simulation data variable is called 'day' and represents 73 days of
% virus spread based on daily contact networks
load('simulation_April20_friendsonly_default.mat')
%% loop through the previously stored data and create new graphs
num = size(day,1); %<-- so this will be 73 for this example data
% Initialize a storage variable
Daily_data = cell(num,2);
%
for ii = 1:num
    % get the adjacency matrix for the contact network of day ii
    A = full(adjacency(day(ii).contacts));
    % get the degree sequence
    degreesequence = sum(A,1);
    % create and store a randomized graph with the same degreesequence
    Daily_data{ii,1} = graph(randomGraphFromDegreeSequence(degreesequence));
    Daily_data{ii,2} = []; %<-- we store an empty array just to keep the resulting variable "dayV2" to be in the correct format
end
%
% convert the data to a structured variable in the correct format for this package
dayV2 = cell2struct(Daily_data, {'contacts','status'}, 2);







